# Generated by Django 5.1 on 2024-08-18 18:04

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import users.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EducationDegree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=96, verbose_name='Название')),
                ('order_number', models.PositiveIntegerField(default=0, verbose_name='Порядковый номер')),
            ],
            options={
                'verbose_name': 'Учёная степень',
                'verbose_name_plural': 'Учёные степени',
            },
        ),
        migrations.CreateModel(
            name='EducationLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=96, verbose_name='Название')),
                ('order_number', models.PositiveIntegerField(default=0, verbose_name='Порядковый номер')),
            ],
            options={
                'verbose_name': 'Уровень образования',
                'verbose_name_plural': 'Уровни образования',
            },
        ),
        migrations.CreateModel(
            name='ExperienceFunction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=96, verbose_name='Название')),
                ('order_number', models.PositiveIntegerField(default=0, verbose_name='Порядковый номер')),
            ],
            options={
                'verbose_name': 'Функция',
                'verbose_name_plural': 'Функции',
            },
        ),
        migrations.CreateModel(
            name='ExperienceIndustry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=96, verbose_name='Название')),
                ('order_number', models.PositiveIntegerField(default=0, verbose_name='Порядковый номер')),
            ],
            options={
                'verbose_name': 'Отрасль',
                'verbose_name_plural': 'Отрасли',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=64, validators=[django.core.validators.MinLengthValidator(limit_value=1)], verbose_name='Имя')),
                ('last_name', models.CharField(max_length=64, validators=[django.core.validators.MinLengthValidator(limit_value=1)], verbose_name='Фамилия')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Адрес электронной почты')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('date_registered', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата регистрации')),
                ('is_verified_email', models.BooleanField(default=False, verbose_name='Адрес электронной почты подтверждён')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='ConfirmEmailToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Date of creation')),
                ('email', models.EmailField(max_length=254, verbose_name='Адрес электронной почты')),
                ('token', models.CharField(default=users.models.generate_code, max_length=128)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_binds', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Токен подтверждения почты',
                'verbose_name_plural': 'Токены подтверждения почты',
            },
        ),
        migrations.CreateModel(
            name='ExperienceSubfunction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=96, verbose_name='Название')),
                ('order_number', models.PositiveIntegerField(default=0, verbose_name='Порядковый номер')),
                ('function', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subfunctions', to='users.experiencefunction')),
            ],
            options={
                'verbose_name': 'Подфункция',
                'verbose_name_plural': 'Подфункции',
            },
        ),
        migrations.CreateModel(
            name='ExperienceSubindustry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=96, verbose_name='Название')),
                ('order_number', models.PositiveIntegerField(default=0, verbose_name='Порядковый номер')),
                ('industry', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subindustries', to='users.experienceindustry')),
            ],
            options={
                'verbose_name': 'Подотрасль',
                'verbose_name_plural': 'Подотрасли',
            },
        ),
        migrations.AddField(
            model_name='experiencefunction',
            name='subindustry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='functions', to='users.experiencesubindustry'),
        ),
        migrations.CreateModel(
            name='ExpertEducationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution_name', models.CharField(max_length=256, verbose_name='Название учебного заведения')),
                ('speciality_name', models.CharField(max_length=256, verbose_name='Специальность')),
                ('education_degree', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='users.educationdegree')),
                ('education_level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.educationlevel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Запись об образовании',
                'verbose_name_plural': 'Записи об образовании',
            },
        ),
        migrations.CreateModel(
            name='ExpertExperienceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_name', models.CharField(max_length=256, verbose_name='Название или описание организации')),
                ('date_start', models.DateField(verbose_name='Дата начала работы')),
                ('date_end', models.DateField(verbose_name='Дата окончания работы')),
                ('position', models.CharField(max_length=256, verbose_name='Должность')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experience_records', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExpertExperienceSegment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField(verbose_name='Дата начала')),
                ('date_end', models.DateField(verbose_name='Дата окончания')),
                ('description', models.CharField(max_length=4096, verbose_name='Описание опыта')),
                ('experience_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.expertexperiencerecord')),
                ('function', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.experiencefunction')),
                ('industry', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.experienceindustry')),
                ('subfunction', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.experiencesubfunction')),
                ('subindustry', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.experiencesubindustry')),
            ],
            options={
                'verbose_name': 'Сегмент опыта',
                'verbose_name_plural': 'Сегменты опыта',
            },
        ),
    ]
